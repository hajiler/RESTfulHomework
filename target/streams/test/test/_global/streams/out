[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(SearchTest, org.scalatest.tools.Framework$$anon$1@51f9e32f, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(RegexCheckTest, org.scalatest.tools.Framework$$anon$1@51f9e32f, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(TimestampUtilTest, org.scalatest.tools.Framework$$anon$1@51f9e32f, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(LambdalTest, org.scalatest.tools.Framework$$anon$1@51f9e32f, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTimestampUtilTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTimestamp Utility functions[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Correctly comparing two string timestamps[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Correctly create a new timestamp by adding a duration in the format hh:mm:ss:ms to a timestamp[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mLambdalTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mLambda util functions[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Parse an event[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mRegexCheckTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mRegex Checking functions[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Correctly find the lowest index of logs within lower bound[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Correctly find the highest index of logs within upper bound[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Correctly gather no logs from a file with no injections in target area[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Correctly gather the desired logs from a file with injections in target area[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSearchTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAWS Lambda and search functionality[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Correctly find the timestamp at the middle of a given file (technically string)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Correctly check if a timestamp is within the search bounds[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Correctly run binary search for exact timestamps[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Correctly run binary search for timestamps within duration[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 783 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 11[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 4, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 11, failed 0, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAll tests passed.[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	RegexCheckTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	TimestampUtilTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	SearchTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	LambdalTest[0m
